name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Release
    runs-on: large
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt install -y pipx ubuntu-keyring debian-archive-keyring make jq
          sudo pipx install git+https://github.com/systemd/mkosi.git
          sudo pipx ensurepath

      - name: Fetch sev-shim
        run: |
          mkdir packages
          SEV_SHIM_TAG=v0.0.24
          wget -P packages https://github.com/tinfoilsh/sev-shim/releases/download/$SEV_SHIM_TAG/tinfoil-sev-shim.deb
          # curl -s "https://api.github.com/repos/tinfoilsh/sev-shim/releases/latest" | jq -r .tag_name

      - name: Fetch kernel
        run: |
          wget -P packages https://github.com/tinfoilsh/AMDSEV/releases/download/v0.0.4/linux-image-6.10.0-snp-guest-0c3836482481_6.10.0-g0c3836482481-2_amd64.deb
          wget -P packages https://github.com/tinfoilsh/AMDSEV/releases/download/v0.0.4/linux-headers-6.10.0-snp-guest-0c3836482481_6.10.0-g0c3836482481-2_amd64.deb

      - name: Build image
        run: |
          sudo /opt/pipx_bin/mkosi --image-version ${{ github.ref_name }}

      - name: Fix permissions
        run: |
          mkdir /tmp/out
          sudo chmod 777 tinfoilcvm.*
          sudo chown $USER:$USER /tmp/out
          sudo chmod 777 /tmp/out

      - name: Generate manifest
        run: |
          cat <<EOF > /tmp/out/tinfoil-inference-${{ github.ref_name }}-manifest.json
          {
              "root": "$(objcopy -O binary --only-section .cmdline tinfoilcvm.efi /dev/stdout | cut -d "=" -f 2)",
              "initrd": "$(sha256sum tinfoilcvm.initrd | awk '{print $1}')",
              "kernel": "$(sha256sum tinfoilcvm.vmlinuz | awk '{print $1}')"
          }
          EOF
          for part in raw initrd vmlinuz; do
            cp tinfoilcvm.$part /tmp/out/tinfoil-inference-${{ github.ref_name }}.$part
          done

      - name: Upload artifact
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_IMAGES_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_IMAGES_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_IMAGES_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_IMAGES_BUCKET }}
          source-dir: /tmp/out
          destination-dir: ./cvm

      - name: Generate release notes
        id: generate-release-notes
        run: |
          RELEASE_NOTES=$(cat << EOF
          Kernel: https://images.tinfoil.sh/cvm/tinfoil-inference-${{ github.ref_name }}.vmlinuz
          Initrd: https://images.tinfoil.sh/cvm/tinfoil-inference-${{ github.ref_name }}.initrd
          Disk: https://images.tinfoil.sh/cvm/tinfoil-inference-${{ github.ref_name }}.raw
          EOF
          )
          echo "release-notes<<EOF" >> "$GITHUB_OUTPUT"
          echo "${RELEASE_NOTES}" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            /tmp/out/tinfoil-inference-${{ github.ref_name }}-manifest.json
          body: ${{ steps.generate-release-notes.outputs.release-notes }}
